plugins {
	id 'java'
	id 'application'
	id 'checkstyle'
}

group = 'exercise'
version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	testImplementation platform('org.junit:junit-bom:5.9.1')
	testImplementation 'org.junit.jupiter:junit-jupiter'
}

checkstyle {
	configFile = rootProject.file('./config/checkstyle.xml')
	ignoreFailures = true
	sourceSets = [project.sourceSets.main] // this line ensures that only the main source set is checked, excluding tests
}

test {
	useJUnitPlatform()
	// your test configuration
	dependsOn checkstyleMain
}

tasks.withType(Test) {
	testLogging {
		exceptionFormat "full"
		events "started", "skipped", "passed", "failed"
		showStandardStreams true
	}
}

tasks.withType(Checkstyle) {
	doLast {
		if (project.hasProperty('checkstyleReportFile')) {
			// Print the Checkstyle violations to the console
			def reportFile = file(checkstyleReportFile)
			if (reportFile.exists()) {
				println "Checkstyle violations report:"
				println reportFile.text
			}
		}
	}
}

// Apply a specific Java toolchain to ease working on different environments.
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

application {
	// Define the main class for the application.
	mainClass = 'myapp.App'
}